//var AWS = require("aws-sdk");
const { EC2Client, CreateTagsCommand, RunInstancesCommand } = require("@aws-sdk/client-ec2");

const ec2Client = new EC2Client();
//const ddb = new AWS.DynamoDB.DocumentClient();
//var ec2 = new AWS.EC2({apiVersion: '2016-11-15'})

exports.handler = async function(event, context) {
  //eslint-disable-line
  console.log(JSON.stringify(event));
  event.Records.forEach(record => {
    console.log(record.eventID);
    console.log(record.eventName);
    console.log('DynamoDB Record: %j', record.dynamodb);

    var table = record.eventSourceARN.split('/')[1]
    console.log('Control Table: ', table)

    const createInstance = async () => {
      var nameTag = record.dynamodb.NewImage.name.S
      var instanceType = record.dynamodb.NewImage.instanceType.S
      var launchTemplate = record.dynamodb.NewImage.launchTemplate.S
      var pkId = record.dynamodb.Keys.id.S 

      var instanceParams = {
        LaunchTemplate: {
          LaunchTemplateId: launchTemplate,
          Version: '$Latest'
        },
        InstanceType: instanceType,
        MinCount: 1,
        MaxCount: 1
      }

      try {
        const instanceData = await ec2Client.send(new RunInstancesCommand(instanceParams));
        console.log('const InstanceData returned: ', instanceData)

        const tagParams = { 
          Resources: [instanceId], 
          Tags: [
            { 
              Key: 'Name',
              Value: nameTag
            },
            { 
              Key: 'DCV',
              Value: 'Yes'
            },
            { 
              Key: 'UUID',
              Value: pkId
            }
          ]
        };
        
        try {
          const tagData = await ec2Client.send(new CreateTagsCommand(tagParams));
          console.log('Instance tagged ', tagData)
        } catch (err) {
          console.log('Missed tagging instance ', err);
        }
      } catch (err) {
        console.log('Missed instance try/catch: ', err);
      }
    }

    if (record.eventName == 'INSERT') {
      try{
        createInstance();
      } catch (err) {
        console.log('entered INSERT but missed createInstance()', err)
      }
    } else { 
      console.log('not an INSERT, exiting') 
    }
  });

  //return Promise.resolve('Successfully processed DynamoDB record');
  return ('Successfully processed DynamoDB record')
};
