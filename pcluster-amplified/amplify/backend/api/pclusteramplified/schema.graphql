type User 
  @model (
    mutations: {create: "createUser", delete: "deleteUser", update: "UpdateUser"}
    subscriptions: { level: public }
  )
  @auth(rules: [
      {allow: owner, ownerField:"owner", provider: userPools, operations:[read,create,delete]}
      {allow: private, provider: userPools, operations:[read]}
  ])
{
  id: ID!
  username: String! 
  instances: [Instance] @connection(keyName: "byUser", fields:["id"])
  costCenter: String
}

type Instance 
  @model(
    mutations: {create: "createInstance", delete: "deleteInstance", update: "updateInstance"} 
    subscriptions: { level: public }
  )
  @auth(rules: [
    {allow: owner, ownerField:"owner", provider: userPools, operations:[read, create, delete]}
    {allow: private, provider: userPools, operations:[read]}
  ])
  @key(name: "byUser", fields: ["userID", "createdAt"])
{
  id: ID!
  userID: ID!
  status: String
  name: String
  launchTemplate: String!
  instanceType: String!
  instanceId: String
  publicip: String
  numberInstancesPerCall: Int
  tags: [String]
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}
